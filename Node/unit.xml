<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.2270" tests="16" failures="0">
  <testsuite name="Root Suite" timestamp="2022-07-27T17:34:59" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="stock_trades_api_hard" timestamp="2022-07-27T17:34:59" tests="16" file="/projects/challenge/test/index.spec.js" time="0.2270" failures="0">
    <testcase name="stock_trades_api_hard should create a new trade of buy type" time="0.0370" classname="should create a new trade of buy type">
    </testcase>
    <testcase name="stock_trades_api_hard should create a new trade of sell type" time="0.0050" classname="should create a new trade of sell type">
    </testcase>
    <testcase name="stock_trades_api_hard should return 400 if the payload has an invalid type" time="0.0030" classname="should return 400 if the payload has an invalid type">
    </testcase>
    <testcase name="stock_trades_api_hard should return 400 if the number of shares exceeds the limit" time="0.0040" classname="should return 400 if the number of shares exceeds the limit">
    </testcase>
    <testcase name="stock_trades_api_hard should return 400 if the number of shares is below the limit" time="0.0040" classname="should return 400 if the number of shares is below the limit">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all the trades" time="0.0290" classname="should fetch all the trades">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch no trades if the type filter value does not exist" time="0.0210" classname="should fetch no trades if the type filter value does not exist">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all trades for a user" time="0.0220" classname="should fetch all trades for a user">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch no trades if user filter value does not exist" time="0.0200" classname="should fetch no trades if user filter value does not exist">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all buy trades for a user" time="0.0210" classname="should fetch all buy trades for a user">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch all sell trades for a user" time="0.0200" classname="should fetch all sell trades for a user">
    </testcase>
    <testcase name="stock_trades_api_hard should fetch a single trade" time="0.0110" classname="should fetch a single trade">
    </testcase>
    <testcase name="stock_trades_api_hard should get 404 if the trade ID does not exist" time="0.0040" classname="should get 404 if the trade ID does not exist">
    </testcase>
    <testcase name="stock_trades_api_hard should get 405 for a put request to /trades/:id" time="0.0100" classname="should get 405 for a put request to /trades/:id">
    </testcase>
    <testcase name="stock_trades_api_hard should get 405 for a patch request to /trades/:id" time="0.0090" classname="should get 405 for a patch request to /trades/:id">
    </testcase>
    <testcase name="stock_trades_api_hard should get 405 for a delete request to /trades/:id" time="0.0070" classname="should get 405 for a delete request to /trades/:id">
    </testcase>
  </testsuite>
</testsuites>